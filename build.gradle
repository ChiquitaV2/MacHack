plugins {
	id 'fabric-loom' version '0.4-SNAPSHOT'
	id 'maven-publish'
}

allprojects {
	repositories {
		maven { url 'https://jitpack.io' }
	}
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation 'com.github.ZeroMemes:Alpine:1.9'
	modImplementation 'com.github.Vatuu:discord-rpc:1.6.2'
	modImplementation 'com.gitlab.CDAGaming:fabritone:fabritone~1.16.x-Fabric-SNAPSHOT'
	//modImplementation 'org.kitteh.irc:client-lib:7.3.0'
	//modImplementation 'net.engio:mbassador:1.3.2'
	include 'com.github.Vatuu:discord-rpc:1.6.2'
	include 'com.github.ZeroMemes:Alpine:1.9'
	modImplementation("com.gitlab.CDAGaming:fabritone:fabric~1.16.3-SNAPSHOT") {
		exclude(group: "org.lwjgl.lwjgl", module: "lwjgl-platform")
		exclude(group: "org.lwjgl.lwjgl", module: "lwjgl")
		exclude(group: "net.java.jinput", module: "jinput-platform")
		exclude(group: "net.java.jinput", module: "jinput")
		exclude(group: "net.sf.jopt-simple", module: "jopt-simple")
		exclude(group: "org.ow2.asm", module: "asm-debug-all")
	}
	include "com.gitlab.CDAGaming:fabritone:fabric~1.16.3-SNAPSHOT"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
